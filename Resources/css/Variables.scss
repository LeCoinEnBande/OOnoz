// Colors
$red50: #ffebee;
$red: #f44336;
$red500: $red;
$red700: #d32f2f;
$purple: #9C27B0;
$purple500: $purple;
$purple700: #7B1FA2;
$deepPurple: #673AB7;
$deepPurple500: $deepPurple;
$blue: #2196F3;
$blue500: $blue;
$blue700: #1976D2;
$cyan: #00BCD4;
$cyan500: $cyan;
$cyan700: #0097A7;
$green: #4CAF50;
$green500: $green;
$green700: #388E3C;
$orange200: #FFCC80;
$orange300: #FFB74D;
$orange: #FF9800;
$orange500: $orange;
$orange700: #F57C00;
$grey100: #F5F5F5;
$grey200: #EEEEEE;
$grey300: #E0E0E0;
$grey400: #BDBDBD;
$grey: #9E9E9E;
$grey500: $grey;
$grey900: #212121;
$blueGrey200: #B0BEC5;
$blueGrey: #607D8B;
$blueGrey500: $blueGrey;

$accentColor: $red;
$borderColor: $grey300;

  // Paths
$root: "../";

  // Fonts
$mainFonts: "Roboto", "Helvetica", "Arial", sans-serif;

// Mixins
@mixin box($width: 100%, $height: $width) {
  height: $height;
  width: $width;
}

@mixin css3($property, $value) {
  @each $prefix in -webkit-, -moz-, -ms-, -o-, ''''{
    #{$prefix}#{$property}: $value;
  }
}

@mixin border-radius($radius) {  // Always a handy mixin. Set border radius without worrying about all those prefixes.
  @include css3(border-radius, $radius);
  background-clip: padding-box;  // stops bg color from leaking outside the border
}

@mixin box-sizing($box-model) { // Reset your elements box model with ease.
  @include css3(box-sizing, $box-model);
}

@mixin transform($transforms) {
  @include css3(transform, $transforms);
}

@mixin transition($args...) {
  @include css3(transition, $args);
}

@mixin opacity($opacity) { // Set the opacity for all browsers and provide a filter fallback for IE8.
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin center-block { // Quickly center any element within its parent. Requires width or max-width to be set
  display: block;
  margin: {
    left: auto;
    right: auto;
  }
}

@mixin text-truncate { // An easy way to truncate text with an ellipsis. Requires the element to be block or inline-block.
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) { // Pass in the desired location of your target element to produce all the necessary positioning code.
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: absolute;
}

@mixin font-size($size: 14, $base: 14 ) { //  This mixin sets the font size in rem''s with a px fallback.
  font-size: $size + px; //fallback for old browsers
  font-size: ($size / $base) * 1rem;
}

@mixin line-height($height: 12, $base: 12 ) { // This mixin sets the line height in rem''s with a px fallback.
  line-height: $height + px; //fallback for old browsers
  line-height: ($height / $base) * 1rem;
}

@mixin centered {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
